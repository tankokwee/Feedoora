@page "/restaurants/create"
@using Microsoft.EntityFrameworkCore
@using Feedoora.Domain
@inject IDbContextFactory<Feedoora.Data.FeedooraContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Restaurant</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Restaurant" OnValidSubmit="AddRestaurant" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label> 
                <InputText id="username" @bind-Value="Restaurant.Username" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.Username" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="Restaurant.Password" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.Password" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="phonenum" class="form-label">PhoneNum:</label> 
                <InputNumber id="phonenum" @bind-Value="Restaurant.PhoneNum" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.PhoneNum" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datecreated" class="form-label">DateCreated:</label> 
                <InputDate id="datecreated" @bind-Value="Restaurant.DateCreated" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.DateCreated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dateupdated" class="form-label">DateUpdated:</label> 
                <InputDate id="dateupdated" @bind-Value="Restaurant.DateUpdated" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.DateUpdated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdby" class="form-label">Createdby:</label> 
                <InputText id="createdby" @bind-Value="Restaurant.Createdby" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.Createdby" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="updatedby" class="form-label">Updatedby:</label> 
                <InputText id="updatedby" @bind-Value="Restaurant.Updatedby" class="form-control" /> 
                <ValidationMessage For="() => Restaurant.Updatedby" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/restaurants">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Restaurant Restaurant { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddRestaurant()
    {
        using var context = DbFactory.CreateDbContext();
        context.Restaurant.Add(Restaurant);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/restaurants");
    }
}
